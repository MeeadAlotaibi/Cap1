[{"/Users/meeadalotaibi/Desktop/T1000/W4/cap1/src/index.js":"1","/Users/meeadalotaibi/Desktop/T1000/W4/cap1/src/reportWebVitals.js":"2","/Users/meeadalotaibi/Desktop/T1000/W4/cap1/src/App.js":"3","/Users/meeadalotaibi/Desktop/T1000/W4/cap1/src/components/Card/index.js":"4","/Users/meeadalotaibi/Desktop/T1000/W4/cap1/src/components/Discription/index.js":"5","/Users/meeadalotaibi/Desktop/T1000/W4/cap1/src/components/Start/index.js":"6"},{"size":541,"mtime":1636195909928,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1636195909928,"results":"9","hashOfConfig":"8"},{"size":1487,"mtime":1636217070621,"results":"10","hashOfConfig":"8"},{"size":3276,"mtime":1636203369937,"results":"11","hashOfConfig":"8"},{"size":654,"mtime":1636216469990,"results":"12","hashOfConfig":"8"},{"size":582,"mtime":1636203732785,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1uh0u7j",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"/Users/meeadalotaibi/Desktop/T1000/W4/cap1/src/index.js",[],["29","30"],"/Users/meeadalotaibi/Desktop/T1000/W4/cap1/src/reportWebVitals.js",[],"/Users/meeadalotaibi/Desktop/T1000/W4/cap1/src/App.js",["31"],"/Users/meeadalotaibi/Desktop/T1000/W4/cap1/src/components/Card/index.js",["32","33","34","35"],"import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport \"./style.css\";\n\nconst Card = (props) => {\n  const cards = props.cards;\n  // const vidio = props.video;\n  const numOfCards = Number(useParams().id);\n  const [newCards, setNewCards] = useState([]);\n  const [openedCard, setOpenedCard] = useState([]);\n  const [matched, setMatched] = useState([]);\n  const [counter, setCounter] = useState(60);\n  const navigate = useNavigate();\n\n  function flipCard(index) {\n    if (!openedCard.includes(index)) {\n      setOpenedCard((opened) => [...opened, index]);\n    }\n  }\n\n  const newStart = () => {\n    setMatched([]);\n    setOpenedCard([]);\n    setCounter(60);\n  };\n\n  useEffect(() => {\n    const timer =\n      counter > 0 && setInterval(() => setCounter(counter - 1), 1000);\n\n    if (counter === 0 && matched.length < numOfCards) {\n      alert(\"Time's up, you're lost, try again\");\n      setMatched([]);\n      setOpenedCard([]);\n      setCounter(60);\n    }\n    if (counter > 0 && matched.length === numOfCards) {\n      alert(\"congratulations for winning, try again\");\n      setMatched([]);\n      setOpenedCard([]);\n      setCounter(60);\n    }\n    return () => {\n      clearInterval(timer);\n    };\n  }, [counter]);\n\n  useEffect(() => {\n    if (openedCard < 2) return;\n\n    const firstMatched = newCards[openedCard[0]];\n    const secondMatched = newCards[openedCard[1]];\n\n    if (secondMatched && firstMatched.id === secondMatched.id) {\n      setMatched([...matched, firstMatched.id]);\n    }\n\n    if (openedCard.length === 2) setTimeout(() => setOpenedCard([]), 1000);\n  }, [openedCard]);\n\n  useEffect(() => {\n    let cardsNums = [];\n    let cardsNumsEle = [];\n    while (cardsNums.length !== numOfCards) {\n      const randomCard = Math.floor(Math.random() * cards.length);\n\n      if (!cardsNums.includes(randomCard)) {\n        cardsNums.push(randomCard);\n        cardsNumsEle.push(cards[randomCard]);\n      }\n    }\n\n    cardsNums.length = 0;\n\n    while (cardsNums.length !== numOfCards) {\n      const randomCard = Math.floor(Math.random() * numOfCards);\n\n      if (!cardsNums.includes(randomCard)) {\n        cardsNums.push(randomCard);\n        cardsNumsEle.push(cardsNumsEle[randomCard]);\n      }\n    }\n\n    setNewCards([...cardsNumsEle]);\n  }, []);\n\n  return (\n    <div className=\"counter\">\n      <div className=\"timer\">\n        <button onClick={() => newStart()} className=\"time1\">\n          newStart\n        </button>\n        <h3 className=\"time\"> Lift Time : {counter} s</h3>\n      </div>\n\n      <div className=\"cards\">\n        {newCards.map((item, i) => {\n          let isFlip = false;\n\n          if (openedCard.includes(i)) {\n            isFlip = true;\n          }\n          if (matched.includes(item.id)) isFlip = true;\n          return (\n            <div\n              key={i}\n              className={`card ${isFlip ? \"flipped\" : \"\"}`}\n              onClick={() => flipCard(i)}\n            >\n              <div className=\"inner\">\n                <div className=\"front\">\n                  <img src={item.img} alt=\"card img\" />\n                </div>\n                <div className=\"back\"></div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","/Users/meeadalotaibi/Desktop/T1000/W4/cap1/src/components/Discription/index.js",[],"/Users/meeadalotaibi/Desktop/T1000/W4/cap1/src/components/Start/index.js",["36"],"import React  from 'react'\nimport {useNavigate} from 'react-router-dom'\n// import Timer from '../Timer';\nimport './style.css'\n\nconst Start = () => {\n    const navigate = useNavigate();\n\n    const changeRoute = (id)=>{\n        navigate(`/card/${id}`);\n    }\n\n    const changeRoutedis=()=>{\n        navigate(`/discription`);\n    }\n    return (\n        \n            <div className=\"discription\">\n            <button onClick={()=>changeRoutedis()} className=\"explainBtn\">Explain</button>\n            </div>\n            \n            \n\n            \n        \n    )\n}\n\nexport default Start\n",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":21,"column":17,"nodeType":"43","messageId":"44","endLine":21,"endColumn":25},{"ruleId":"41","severity":1,"message":"45","line":13,"column":9,"nodeType":"43","messageId":"44","endLine":13,"endColumn":17},{"ruleId":"46","severity":1,"message":"47","line":46,"column":6,"nodeType":"48","endLine":46,"endColumn":15,"suggestions":"49"},{"ruleId":"46","severity":1,"message":"50","line":59,"column":6,"nodeType":"48","endLine":59,"endColumn":18,"suggestions":"51"},{"ruleId":"46","severity":1,"message":"52","line":85,"column":6,"nodeType":"48","endLine":85,"endColumn":8,"suggestions":"53"},{"ruleId":"41","severity":1,"message":"54","line":9,"column":11,"nodeType":"43","messageId":"44","endLine":9,"endColumn":22},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'setCards' is assigned a value but never used.","Identifier","unusedVar","'navigate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'matched.length' and 'numOfCards'. Either include them or remove the dependency array.","ArrayExpression",["57"],"React Hook useEffect has missing dependencies: 'matched' and 'newCards'. Either include them or remove the dependency array. You can also do a functional update 'setMatched(m => ...)' if you only need 'matched' in the 'setMatched' call.",["58"],"React Hook useEffect has missing dependencies: 'cards' and 'numOfCards'. Either include them or remove the dependency array.",["59"],"'changeRoute' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},{"desc":"62","fix":"63"},{"desc":"64","fix":"65"},"Update the dependencies array to be: [counter, matched.length, numOfCards]",{"range":"66","text":"67"},"Update the dependencies array to be: [matched, newCards, openedCard]",{"range":"68","text":"69"},"Update the dependencies array to be: [cards, numOfCards]",{"range":"70","text":"71"},[1257,1266],"[counter, matched.length, numOfCards]",[1627,1639],"[matched, newCards, openedCard]",[2299,2301],"[cards, numOfCards]"]